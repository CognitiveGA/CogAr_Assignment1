@startuml
title Post-Earthquake Search and Rescue Robot - Component Diagram

package "TIAGo Post-earthquake Rescueter" as receiver {
  
  component "<<Subsystem>>\nPerception" as perception{
    component "<<Component>>\nRGB-D Cameras"              as perception.camera
    component "<<Component>>\nLiDARs"                     as perception.lidar
    component "<<Component>>\nSONARs"                     as perception.sonar
    component "<<Component>>\Merge data"            as perception.adj
    component "<<Component>>\nGPS"                        as perception.gps
    component "<<Component>>\nIMUs"                       as perception.imu

    portout "depth / infrared\n/ point cloud"             as perception.envdet
    portout "RGB / depth\n/ infrared / point cloud"       as perception.injdet
    portout "linear acceleration\n/ angular velocity"     as perception.accgyr
    portout "position"                                    as perception.pos

    perception.camera          --0)- perception.adj     : point cloud / depth / infrared
    perception.lidar           --0)- perception.adj     : point cloud / depth
    perception.sonar           --0)- perception.adj     : depth
    perception.adj             --0)- perception.envdet
    perception.camera          --0)- perception.injdet
    perception.imu             --0)- perception.accgyr
    perception.gps             --0)- perception.pos
  }

  component "<<Subsystem>>\nCommunicator" as communicator {
    portin "audio" as communicator.emit
    portin "position" as communicator.pos
    portin "string" as communicator.riskeval
    portin "string" as communicator.triageinfo
    portin "string" as communicator.victinfo

    component "<<Component>>\nMicrophones" as communicator.mic
    component "<<Component>>\nSpeakers" as communicator.speaker
    component "<<Component>>\nReal-Time Reporting" as communicator.rtrep
    component "<<Component>>\nMission Status Notification" as communicator.status
    component "<<Component>>\nGUI Operator" as communicator.gui

    portout "audio" as communicator.hear
    portout "status code" as communicator.statuscode
    portout "command" as communicator.cmd

    communicator.emit --0)- communicator.speaker
    communicator.pos --0)- communicator.rtrep
    communicator.riskeval --0)- communicator.rtrep
    communicator.triageinfo --0)- communicator.rtrep
    communicator.victinfo --0)- communicator.rtrep

    communicator.rtrep --0)- communicator.status
    communicator.rtrep --0)- communicator.gui
    communicator.status --0)- communicator.gui
    communicator.gui --0)- communicator.status

    communicator.mic --0)- communicator.hear
    communicator.status --0)- communicator.statuscode
    communicator.gui --0)- communicator.cmd
  }

  component "<<Subsystem>>\nSearch and Rescue Tasks" as searchrescue{
    portin "audio" as searchrescue.hear
    portin "RGB / depth\n/ infrared / point cloud" as searchrescue.injdet
    portin "position" as searchrescue.pos
    portin "status code" as searchrescue.statuscode

    component "<<Component>>\nVictim Detection and Reporting" as searchrescue.vicdetrep
    component "<<Component>>\nTriage System" as searchrescue.triage

    portout "audio" as searchrescue.emit
    portout "string" as searchrescue.victinfo
    portout "string" as searchrescue.triageinfo

    searchrescue.injdet --0)- searchrescue.vicdetrep
    searchrescue.injdet --0)- searchrescue.triage
    searchrescue.hear --0)- searchrescue.vicdetrep
    searchrescue.hear --0)- searchrescue.triage
    searchrescue.pos --0)- searchrescue.vicdetrep
    searchrescue.statuscode --0)- searchrescue.triage

    searchrescue.vicdetrep --0)- searchrescue.triage

    searchrescue.vicdetrep --0)- searchrescue.emit
    searchrescue.vicdetrep --0)- searchrescue.victinfo
    searchrescue.triage --0)- searchrescue.triageinfo
  }

  component "<<Subsystem>>\nStructural Analysis" as structanal {
    portin "depth / infrared\n/ point cloud" as structanal.envdet
    portin "linear acceleration\n/ angular velocity"     as structanal.accgyr
    

    component "<<Component>>\nStructural Risk Assessment" as structanal.risk
    component "<<Component>>\nObstacle and Damage Detection" as structanal.obstdamdet

    portout "point cloud" as structanal.obsdampos
    portout "string" as structanal.riskinfo
    portout "string" as structanal.riskeval

    structanal.envdet --0)- structanal.risk
    structanal.envdet --0)- structanal.obstdamdet
    structanal.accgyr --0)- structanal.risk

    structanal.obstdamdet --0)- structanal.risk

    structanal.obstdamdet --0)- structanal.obsdampos
    structanal.risk --0)- structanal.riskinfo
    structanal.risk --0)- structanal.riskeval
  }

  component "<<Subsystem>>\nCore System" as core {
    portin "depth / infrared\n/ point cloud" as core.envdet
    portin "point cloud" as core.obsdampos
    portin "string" as core.riskinfo
    portin "string" as core.victinfo
    portin "status code" as core.statuscode
    portin "odometry data" as core.odometry

    component "<<Component>>\nAutonomous Navigation" as core.autonav
    component "<<Component>>\nSLAM" as core.slam

    portout "command" as core.cmd
    portout "path" as core.motpath

    core.envdet --0)- core.slam
    core.obsdampos --0)- core.autonav
    core.riskinfo --0)- core.autonav
    core.victinfo --0)- core.autonav
    core.statuscode --0)- core.autonav
    core.cmd --0)- core.autonav
    core.odometry --0)- core.slam

    core.slam --0)- core.autonav
    core.autonav --0)- core.motpath
  }

  component "<<Subsystem>>\nActuator" as actuator {
    portin "path" as actuator.motpath

    component "Motors" as actuator.mot
    component "Motor controllers" as actuator.motcont
    component "Motor encoders" as actuator.motenc

    portout "odometry data" as actuator.odometry

    actuator.motpath --0)- actuator.motcont

    actuator.motcont --0)- actuator.mot
    actuator.motenc --0)- actuator.motcont
    actuator.motenc --0)- actuator.odometry

  }

  ' communicator
  communicator.hear --0)- searchrescue.hear
  communicator.statuscode --0)- core.statuscode
  communicator.statuscode --0)- searchrescue.statuscode
  communicator.cmd --0)- core.cmd

  ' searchrescue
  searchrescue.emit --0)- communicator.emit
  searchrescue.victinfo --0)- core.victinfo
  searchrescue.triageinfo --0)- communicator.triageinfo
  searchrescue.victinfo --0)- communicator.victinfo

  ' perception
  perception.injdet --0)- searchrescue.injdet
  perception.envdet --0)- structanal.envdet
  perception.accgyr --0)- structanal.accgyr
  perception.envdet --0)- core.envdet
  perception.pos --0)- searchrescue.pos
  perception.pos --0)- communicator.pos

  ' structanal
  structanal.obsdampos --0)- core.obsdampos
  structanal.riskinfo --0)- core.riskinfo
  structanal.riskeval --0)- communicator.riskeval

  ' core
  core.motpath --0)- actuator.motpath

  ' actuator
  actuator.odometry --0)- core.odometry
}
@enduml